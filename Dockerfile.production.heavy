# Use the rust build image from docker as our base
# renovate-automation: rustc version
FROM rust:1.76 AS build

# Set our working directory for the build
WORKDIR /usr/src/router

# Update our build image and install required packages
RUN apt-get update
RUN apt-get -y install \
    npm \
    protobuf-compiler \
    cmake

# Add rustfmt since build requires it
RUN rustup component add rustfmt

# Cache dependencies
COPY Cargo.toml ./Cargo.toml
COPY xtask ./xtask/
RUN cargo fetch

# Copy the router source to our build environment
COPY . .

# Build and install the custom binary
RUN cargo build --release

# Make directories for config and schema
RUN mkdir -p /dist/config && \
    mkdir /dist/schema && \
    mv target/release/router /dist && \
    mv target/release/helper /dist && \
    mv start.sh /dist

# Copy configuration and schema for docker image
COPY router.yaml /dist/config.yaml
COPY supergraph-schema.graphql /dist/schema.graphql
COPY rover-config.yaml /dist/rover-config.yaml

# Download and install Rover
RUN curl -sSL https://raw.githubusercontent.com/apollographql/rover/v0.25.0/installers/binstall/scripts/nix/install.sh | sh

# Move Rover binary to dist
RUN mv ~/.rover/bin/rover /dist/rover

FROM debian:bookworm-slim

RUN apt-get update
RUN apt-get -y install \
    ca-certificates \
    procps \
    net-tools \
    curl \
    vim \
    nano \
    htop \
    lsof \
    iputils-ping \
    iputils-tracepath \
    python3 \
    python3-pip \
    python3-flask

# Set labels for our image
LABEL org.opencontainers.image.authors="Apollo Graph, Inc. https://github.com/apollographql/router"
LABEL org.opencontainers.image.source="https://github.com/apollographql/router"

# Copy in the required files from our build image
COPY --from=build /dist /dist

WORKDIR /dist

# Copy the server script
COPY src/server/server.py /dist/server.py
COPY start-all.sh /dist/start-all.sh

# Make sure we can run the router
RUN chmod 777 /dist/router
RUN chmod 777 /dist/helper
RUN chmod 777 /dist/start.sh
RUN chmod 777 /dist/schema.graphql
RUN chmod 777 /dist/config.yaml
RUN chmod 777 /dist/server.py
RUN chmod 777 /dist/rover
RUN chmod 777 /dist/start-all.sh

# Default executable is the router
ENTRYPOINT ["/dist/start-all.sh"]